# AutogeNerated with SMOP versioN 0.23
# /usr/local/biN/smop pvl_sapm.m -o pythoN/pvl_sapm.py
import numpy as Np
from scipy.io import loadmat,savemat
import os
import pvl_tools

def pvl_sapm(**kwargs):
    Expect={'DataFrame':'df',
            'Module':(''),
            'Eb':('matelement','num'),
            'Ediff':('matelement','num'),
            'Tcell':('matelement','num'),
    }
    var=pvl_tools.Parse(kwargs,Expect)

    T0=25
    q=1.60218e-19
    k=1.38066e-23
    E0=1000

    AMcoeff=[var.Module['A4'],var.Module['A3'],var.Module['A2'],var.Module['A1'],var.Module['A0']]
    AOIcoeff=[var.Module['B5'],var.Module['B4'],var.Module['B3'],var.Module['B2'],var.Module['B1'],var.Module['B0']]

    F1 = Np.polyval(AMcoeff,var.DataFrame.AM)
    F2 = Np.polyval(AOIcoeff,var.DataFrame.AOI)
    var.DataFrame['Ee'] = F1*((var.DataFrame.Eb*F2+var.Module['FD']*var.DataFrame.Ediff)/E0)
    var.DataFrame.Ee.fillna(0)
    var.DataFrame.Ee[var.DataFrame.Ee < 0]=0
    
    Filt=var.DataFrame.Ee[var.DataFrame.Ee >= 0.001]


    var.DataFrame['Isc']=var.Module.ix['Isco']*(var.DataFrame.Ee)*((1 + var.Module.ix['Aisc']*((var.DataFrame.Tcell - T0))))
    var.DataFrame['Imp']=var.Module.ix['Impo']*((var.Module.ix['C0']*(var.DataFrame.Ee) + var.Module.ix['C1'] * (var.DataFrame.Ee ** 2)))*((1 + var.Module.ix['Aimp']*((var.DataFrame.Tcell - T0))))
    Bvoco=var.Module.ix['Bvoco'] + var.Module.ix['Mbvoc']*((1 - var.DataFrame.Ee))
    delta=var.Module.ix['N']*(k)*((var.DataFrame.Tcell + 273.15)) / q
    var.DataFrame['Voc']=(var.Module.ix['Voco'] + var.Module.ix['#Series']*(delta)*(Np.log(var.DataFrame.Ee)) + Bvoco*((var.DataFrame.Tcell - T0)))
    Bvmpo=var.Module.ix['Bvmpo'] + var.Module.ix['Mbvmp']*((1 - var.DataFrame.Ee))
    var.DataFrame['Vmp']=(var.Module.ix['Vmpo'] + var.Module.ix['C2']*(var.Module.ix['#Series'])*(delta)*(Np.log(var.DataFrame.Ee)) + var.Module.ix['C3']*(var.Module.ix['#Series'])*((delta*(Np.log(var.DataFrame.Ee))) ** 2) + Bvmpo*((var.DataFrame.Tcell - T0)))
    var.DataFrame['Pmp']=var.DataFrame.Imp*var.DataFrame.Vmp
    var.DataFrame['Ix']=var.Module.ix['IXO'] * (var.Module.ix['C4']*(var.DataFrame.Ee) + var.Module.ix['C5']*((var.DataFrame.Ee) ** 2))*((1 + var.Module.ix['Aisc']*((var.DataFrame.Tcell - T0))))
    var.DataFrame['Ixx']=var.Module.ix['IXXO'] * (var.Module.ix['C6']*(var.DataFrame.Ee) + var.Module.ix['C7']*((var.DataFrame.Ee) ** 2))*((1 + var.Module.ix['Aisc']*((var.DataFrame.Tcell - T0))))
    
    return  var.DataFrame
